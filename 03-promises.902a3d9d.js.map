{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAqBjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAEpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBL,QAAiBJ,OAE5CU,EAAK,sBAAoBN,QAAeJ,SAE3CA,MA5BTJ,EAAKC,KAAKe,iBAAiB,UAAWC,IACpCA,EAAMC,iBAER,IAAIC,EAAaC,SAASpB,EAAKI,MAAMiB,OACrC,MAAMC,EAAYF,SAASpB,EAAKK,KAAKgB,OAC/BE,EAAcH,SAASpB,EAAKM,OAAOe,OACvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,IAChCjB,EAAciB,EAAGL,GACdM,MAAKJ,IACJK,EAAA5B,GAAS6B,OAAOC,QAAQP,MAEzBQ,OAAMC,IACLJ,EAAA5B,GAAS6B,OAAOI,QAAQD,MAE5BX,GAAcG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {  \n  form: document.querySelector('form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', (event) => {\n  event.preventDefault();\n\nlet delayParse = parseInt(refs.delay.value);\nconst stepParse = parseInt(refs.step.value);\nconst amountParse = parseInt(refs.amount.value);\n  for (let i = 1; i <= amountParse; i++) {\n    createPromise(i, delayParse)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n    delayParse += stepParse;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);          \n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n    });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayParse","parseInt","value","stepParse","amountParse","i","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.902a3d9d.js.map"}